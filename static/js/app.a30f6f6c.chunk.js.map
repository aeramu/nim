{"version":3,"sources":["src/config/graphql.js","src/components/AccountList/components/Account.js","src/components/LoadMore/index.js","src/components/AccountList/index.js","src/components/SearchBar/index.js","src/components/Header/index.js","src/screens/Home/search.js","src/screens/Home/index.js","App.js","web-build/register-service-worker.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","nama","nim","jurusan","View","style","styles","container","Text","StyleSheet","create","flexDirection","paddingTop","paddingBottom","borderBottomWidth","borderBottomColor","flex","marginRight","onPress","TouchableOpacity","icon","name","text","alignItems","justifyContent","alignSelf","paddingVertical","paddingHorizontal","margin","borderWidth","borderColor","borderRadius","color","data","loadMore","containerStyle","FlatList","ListHeaderComponent","renderItem","item","Account","nimJurusan","nimTPB","fakultas","status","ListFooterComponent","LoadMore","onChangeText","size","TextInput","placeholder","input","fontSize","SEARCH","gql","React","useState","keyword","setKeyword","timer","setTimer","useLazyQuery","search","loading","fetchMore","useEffect","a","async","Analytics","Header","roundedBox","SearchBar","clearTimeout","setTimeout","variables","first","searchBar","ActivityIndicator","activity","AccountList","edges","pageInfo","hasNextPage","after","endCursor","updateQuery","previousResult","fetchMoreResult","__typename","list","screen","Dimensions","get","width","borderTopWidth","borderTopColor","App","Home","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.a30f6f6c.chunk.js","sourcesContent":["import {ApolloClient, InMemoryCache} from '@apollo/client'\n\nexport const client = new ApolloClient({\n    // uri: 'https://nim-finder-server.herokuapp.com',\n    uri: \"https://owlfchiagi.execute-api.ap-southeast-1.amazonaws.com/graphql\",\n    cache: new InMemoryCache(),\n})","import React from 'react'\nimport { View, Text, StyleSheet } from 'react-native'\n\n\nexport default ({nama, nim, jurusan}) => {\n    return(\n        <View style={styles.container}>\n            <Text style={styles.nama}>{nama}</Text>\n            <Text style={styles.nim}>{nim}</Text>\n            <Text style={styles.jurusan}>{jurusan}</Text>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        flexDirection:'row',\n        paddingTop:10,\n        paddingBottom:10,\n        borderBottomWidth:1,\n        borderBottomColor:\"#ccc\"\n    },\n    nama:{\n        flex:5,\n        marginRight:5\n    },\n    nim:{\n        flex:3,\n        marginRight:5\n    },\n    jurusan:{\n        flex:4\n    }\n})","import React from 'react'\nimport {TouchableOpacity, Text, StyleSheet} from 'react-native'\nimport Icon from \"react-native-vector-icons/AntDesign\"\n\nexport default ({onPress}) => {\n    return(\n        <TouchableOpacity style={styles.container} onPress={() => onPress()}>\n            <Icon style={styles.icon} name=\"down\"/>\n            <Text style={styles.text}>Hasil lainnya</Text>\n        </TouchableOpacity>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        flexDirection:'row',\n        alignItems:'center',\n        justifyContent:'center',\n        alignSelf:'center',\n        paddingVertical:5,\n        paddingHorizontal:10,\n        margin:10,\n        borderWidth:1,\n        borderColor:\"#aaa\",\n        borderRadius:20\n    },\n    text:{\n        color:\"#555\"\n    },\n    icon:{\n        marginRight:5,\n        color:\"#555\"\n    }\n})","import React from 'react'\nimport {FlatList} from 'react-native'\nimport Account from './components/Account'\nimport LoadMore from '../LoadMore'\n\nexport default ({data, onPress, loadMore, containerStyle}) => {\n    return(\n        <FlatList\n            style={containerStyle}\n            data={data}\n            ListHeaderComponent={() => (\n                // data.length > 0 &&\n                // <Account \n                //     nama='Nama'\n                //     nim='NIM' \n                //     jurusan='Jurusan'\n                // /> \n                <></>\n            )}\n            renderItem={({item}) => (\n                <Account \n                    nama={item.nama} \n                    nim={item.nimJurusan == \"\" ? item.nimTPB : item.nimJurusan}\n                    jurusan={item.jurusan == \"\" ? item.fakultas : item.jurusan}\n                    status={item.status}\n                />\n            )}\n            ListFooterComponent={() => (\n                loadMore\n                ? <LoadMore onPress={() => onPress()}/>\n                : null\n            )}\n        />\n    )\n}","import React from 'react'\nimport {View, TextInput, StyleSheet} from 'react-native'\nimport Icon from 'react-native-vector-icons/FontAwesome5'\n\nexport default ({onChangeText, containerStyle}) => {\n    return(\n        <View style={containerStyle}>\n            <View style={styles.container}>\n                <Icon\n                    name='search'\n                    size={15}\n                    color=\"#aaa\"\n                    style={styles.icon}\n                />\n                <TextInput\n                    placeholder='Ketik nama atau NIM...' \n                    onChangeText={(text) => onChangeText(text)}\n                    style={styles.input}\n                />\n            </View>\n        </View>\n        \n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        flexDirection:'row',\n        alignItems:'center',\n    },\n    icon:{\n        marginRight:10,\n    },\n    input:{\n        flex:1,\n    }\n})\n\n","import React from 'react'\nimport {View, Text, StyleSheet} from 'react-native'\n\n\nexport default () => {\n    return(\n        <View style={styles.container}>\n            <Text style={styles.text}>ITB NIM Finder</Text>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        alignItems:'center',\n        paddingVertical:20\n    },\n    text:{\n        fontSize:30,\n    }\n})","import {gql} from '@apollo/client'\n\nexport const SEARCH = gql`\n    query($keyword: String!, $first: Int!, $after: ID){\n        search(keyword: $keyword, first: $first, after: $after){\n            edges{\n                id\n                nama\n                nimTPB\n                nimJurusan\n                fakultas\n                jurusan\n                status\n            }\n            pageInfo{\n                endCursor\n                hasNextPage\n            }\n        }\n    }\n`","import React from 'react'\nimport {View, ActivityIndicator, StyleSheet, Dimensions} from 'react-native'\nimport AccountList from '../../components/AccountList'\nimport SearchBar from '../../components/SearchBar'\nimport Header from '../../components/Header'\n\nimport {useLazyQuery} from '@apollo/client'\nimport {SEARCH} from './search'\n\nimport * as Analytics from 'expo-firebase-analytics'\n\nexport default () => {\n    const [keyword, setKeyword] = React.useState(\"\")\n    const [timer, setTimer] = React.useState()\n    const [search, {data, loading, fetchMore}] = useLazyQuery(SEARCH)\n\n    React.useEffect(async () => {\n        await Analytics.logEvent('Web accessed',{})\n    },[])\n\n    const loadMore = async () => {\n        await Analytics.logEvent('Load more',{\n            keyword: keyword\n        })\n        fetchMore({\n            variables:{\n                keyword: keyword,\n                first: 20,\n                after: data.search.pageInfo.endCursor\n            },\n            updateQuery: (previousResult, {fetchMoreResult}) => {\n                return {\n                    search:{\n                        __typename: previousResult.search.__typename,\n                        edges: [\n                            ...previousResult.search.edges,\n                            ...fetchMoreResult.search.edges,\n                        ],\n                        pageInfo: fetchMoreResult.search.pageInfo\n                    }\n                }\n            }\n        })\n    }\n\n    const onChangeText = (text) => {\n        clearTimeout(timer)\n        if (text != \"\"){\n            setTimer(setTimeout(async () => {\n                search({\n                    variables:{\n                        keyword: text,\n                        first: 20,\n                    }\n                })\n                await Analytics.logEvent('Search',{\n                    keyword: text\n                })\n                setTimer(null)\n            }, 500))\n        }\n        setKeyword(text)\n    }\n\n    return(\n        <View style={styles.container}>\n            <Header/>\n            <View style={styles.roundedBox}>\n                <SearchBar \n                    onChangeText={(text) => onChangeText(text)} \n                    containerStyle={styles.searchBar}\n                />\n                {keyword == \"\" | timer\n                    ? <></>\n                    : loading\n                        ? <ActivityIndicator style={styles.activity}/>\n                        :\n                            <AccountList \n                                data={data? data.search.edges : []} \n                                loadMore={data && data.search.pageInfo.hasNextPage}\n                                onPress={() => loadMore()}\n                                containerStyle={styles.list}\n                            />\n                }\n            </View>\n        </View>\n    )\n}\n\nconst screen = Dimensions.get('window')\n\nconst styles = StyleSheet.create({\n    container:{\n        flex:1,\n        alignItems: screen.width > 800? 'center' : 'stretch',\n        paddingHorizontal: 15,\n        paddingBottom:30,\n    },\n    roundedBox:{\n        borderWidth:1,\n        borderRadius:20,\n        paddingHorizontal:15,\n        borderColor:\"#aaa\",\n        alignItems:'stretch',\n        width: screen.width > 800? 800 : 'auto'\n    },\n    searchBar:{\n        paddingTop:8,\n        paddingBottom:8,\n    },\n    activity:{\n        borderTopWidth:1,\n        borderTopColor:\"#ccc\",\n        paddingVertical:20\n    },\n    list:{\n        borderTopWidth:1,\n        borderTopColor:\"#ccc\",\n        paddingTop: 10,\n    }\n})","import React from 'react'\nimport {ApolloProvider} from '@apollo/client'\nimport {client} from './src/config/graphql'\nimport Home from './src/screens/Home'\n\nexport default function App() {\n  return (\n    <ApolloProvider client={client}>\n      <Home/>\n    </ApolloProvider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/nim-finder/expo-service-worker.js', { scope: '/nim-finder/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}